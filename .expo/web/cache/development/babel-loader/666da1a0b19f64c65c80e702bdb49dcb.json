{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Shubham\\\\Expo\\\\Dictionary App\\\\DictionaryApp-Online-Version-Template-main\\\\screens\\\\HomeScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header } from \"react-native-elements\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this);\n\n    _this.getWord = function (word) {\n      var searchKeyword = word.toLowerCase();\n      return fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en/\" + searchKeyword).then(function (data) {\n        if (data.status === 200) {\n          return data.json();\n        } else {\n          return null;\n        }\n      }).then(function (response) {\n        var responseObject = response;\n\n        if (responseObject) {\n          _this.setState({\n            word: _this.state.text,\n            definition: responseObject[0].meanings[0].definitions[0].definition,\n            lexicalCategory: responseObject[0].meanings[0].partOfSpeech\n          });\n        } else {\n          _this.setState({\n            word: _this.state.text,\n            definition: \"Not Found\"\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      text: \"\",\n      isSearchPressed: false,\n      isLoading: false,\n      word: \"Loading...\",\n      lexicalCategory: \"\",\n      definition: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          backgroundColor: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        backgroundColor: \"purple\",\n        centerComponent: {\n          text: \"Pocket Dictionary\",\n          style: {\n            color: \"#fff\",\n            fontSize: 20\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.inputBoxContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            text: text,\n            isSearchPressed: false,\n            word: \"Loading...\",\n            lexicalCategory: \"\",\n            examples: [],\n            definition: \"\"\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            text: text,\n            isSearchPressed: false,\n            word: \"Loading...\",\n            lexicalCategory: \"\",\n            examples: [],\n            definition: \"\"\n          });\n        },\n        value: this.state.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.setState({\n            isSearchPressed: true\n          });\n\n          _this2.getWord(_this2.state.text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.searchText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, \"Search\"))), React.createElement(View, {\n        style: styles.outputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, this.state.isSearchPressed && this.state.word === \"Loading...\" ? this.state.word : \"\"), this.state.word !== \"Loading...\" ? React.createElement(View, {\n        style: {\n          justifyContent: \"center\",\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, \"Word : \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, this.state.word)), React.createElement(View, {\n        style: styles.detailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, \"Type : \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, this.state.lexicalCategory)), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          flexWrap: \"wrap\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, \"Definition : \"), React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, this.state.definition))) : null));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  inputBoxContainer: {\n    padding: \"7%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputBox: {\n    padding: \"7%\",\n    padding: 20,\n    width: \"80%\",\n    alignSelf: \"center\",\n    height: 40,\n    textAlign: \"center\",\n    borderWidth: 4,\n    borderColor: \"purple\",\n    borderRadius: 5\n  },\n  searchButton: {\n    margin: \"7%\",\n    width: \"40%\",\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"purple\"\n  },\n  searchText: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  outputContainer: {\n    flex: 0.7,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  detailsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    margin: 10\n  },\n  detailsTitle: {\n    color: \"orange\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/Shubham/Expo/Dictionary App/DictionaryApp-Online-Version-Template-main/screens/HomeScreen.js"],"names":["React","Component","Header","HomeScreen","getWord","word","searchKeyword","toLowerCase","fetch","then","data","status","json","response","responseObject","setState","state","text","definition","meanings","definitions","lexicalCategory","partOfSpeech","isSearchPressed","isLoading","backgroundColor","style","color","fontSize","styles","inputBoxContainer","examples","inputBox","searchButton","searchText","outputContainer","justifyContent","marginLeft","detailsContainer","detailsTitle","flexDirection","flexWrap","StyleSheet","create","padding","alignItems","width","alignSelf","height","textAlign","borderWidth","borderColor","borderRadius","margin","fontWeight","flex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Header } from \"react-native-elements\";\nexport default class HomeScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      isSearchPressed: false,\n      isLoading: false,\n      word: \"Loading...\",\n      lexicalCategory: \"\",\n      definition: \"\",\n    };\n  }\n  getWord = (word) => {\n    var searchKeyword = word.toLowerCase();\n    return fetch(\n      `https://api.dictionaryapi.dev/api/v2/entries/en/${searchKeyword}`\n    )\n      .then((data) => {\n        if (data.status === 200) {\n          return data.json();\n        } else {\n          return null;\n        }\n      })\n      .then((response) => {\n        var responseObject = response;\n        if (responseObject) {\n          this.setState({\n            word: this.state.text,\n            definition: responseObject[0].meanings[0].definitions[0].definition,\n            lexicalCategory: responseObject[0].meanings[0].partOfSpeech,\n          });\n        } else {\n          this.setState({\n            word: this.state.text,\n            definition: \"Not Found\",\n          });\n        }\n      });\n  };\n  render() {\n    return (\n      <View style={{backgroundColor: \"#fff\" }}>\n        <Header\n          backgroundColor={\"purple\"}\n          centerComponent={{\n            text: \"Pocket Dictionary\",\n            style: { color: \"#fff\", fontSize: 20 },\n          }}\n        />\n        <View style={styles.inputBoxContainer}>\n          <Text\n            onChangeText={(text) => {\n              this.setState({\n                text: text,\n                isSearchPressed: false,\n                word: \"Loading...\",\n                lexicalCategory: \"\",\n                examples: [],\n                definition: \"\",\n              });\n            }}\n          />\n          {\n            <TextInput\n              style={styles.inputBox}\n              onChangeText={(text) => {\n                this.setState({\n                  text: text,\n                  isSearchPressed: false,\n                  word: \"Loading...\",\n                  lexicalCategory: \"\",\n                  examples: [],\n                  definition: \"\",\n                });\n              }}\n              value={this.state.text}\n            />\n          }\n          <TouchableOpacity\n            style={styles.searchButton}\n            onPress={() => {\n              this.setState({ isSearchPressed: true });\n              this.getWord(this.state.text);\n            }}\n          >\n            <Text style={styles.searchText}>Search</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.outputContainer}>\n          <Text style={{ fontSize: 20 }}>\n            {this.state.isSearchPressed && this.state.word === \"Loading...\"\n              ? this.state.word\n              : \"\"}\n          </Text>\n          {this.state.word !== \"Loading...\" ? (\n            <View style={{ justifyContent: \"center\", marginLeft: 10 }}>\n              <View style={styles.detailsContainer}>\n                <Text style={styles.detailsTitle}>Word : </Text>\n                <Text style={{ fontSize: 18 }}>{this.state.word}</Text>\n              </View>\n              <View style={styles.detailsContainer}>\n                <Text style={styles.detailsTitle}>Type : </Text>\n                <Text style={{ fontSize: 18 }}>\n                  {this.state.lexicalCategory}\n                </Text>\n              </View>\n              <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                <Text style={styles.detailsTitle}>Definition : </Text>\n                <Text style={{ fontSize: 18 }}>{this.state.definition}</Text>\n              </View>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  inputBoxContainer: {\n    padding: \"7%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputBox: {\n    padding: \"7%\",\n    padding: 20,\n    width: \"80%\",\n    alignSelf: \"center\",\n    height: 40,\n    textAlign: \"center\",\n    borderWidth: 4,\n    borderColor: \"purple\",\n    borderRadius: 5,\n  },\n  searchButton: {\n    margin: \"7%\",\n    width: \"40%\",\n    height: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 10,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: \"purple\",\n  },\n  searchText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  outputContainer: {\n    flex: 0.7,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  detailsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    margin: 10,\n  },\n  detailsTitle: {\n    color: \"orange\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}